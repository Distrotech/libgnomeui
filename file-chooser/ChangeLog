2003-09-30  Federico Mena Quintero  <federico@ximian.com>

	* gtkfilechooserimpldefault.c (struct _GtkFileChooserImplDefault):
	Added fields for the shortcuts tree and its model.
	(create_file_list): Don't call
	gtk_tree_view_column_set_sort_column_id() twice.
	(create_shortcuts_model): New function.
	(list_icon_data_func): Use an ICON_SIZE macro instead of a
	hardcoded value.
	(list_row_activated): Use _gtk_file_chooser_set_current_folder_path()
	to avoid converting the GtkFilePath to a URI string.
	(gtk_file_chooser_impl_default_set_current_folder): Select the
	appropriate item from the shortcuts list when the current folder
	changes, to let the user know where he is.
	(tree_selection_changed): Likewise.

	* gtkfilesystem.h (struct _GtkFileSystemIface): Added methods for
	::supports_shortcuts(), ::list_shortcuts(), ::set_shortcuts().

2003-09-15  Bastien Nocera  <hadess@hadess.net>

	* gtkfilefilter.c: (gtk_file_filter_filter): avoid crash when
	selecting a new filter and clicking a different directory

2003-09-10  Federico Mena Quintero  <federico@ximian.com>

	* TODO: Added an API point about needing a way to fetch the hpaned
	position so we can save it.

	* gtkfilechooser.c (_gtk_file_chooser_get_paths): Fixed API docs.
	(gtk_file_chooser_get_uris): Likewise.
	(gtk_file_chooser_get_filenames): Likewise.

	* gtkfilechooserdialog.c (file_chooser_widget_file_activated): New
	callback, calls gtk_window_activate_default().

	* testfilechooser.c (response_cb): Print the selected files if the
	user clicks OK.

2003-09-10  Federico Mena Quintero  <federico@ximian.com>

	* gtkfilechooserimpldefault.c (create_file_list): Connect to
	"row_activated" on the file list.
	(list_row_activated): New function.  Changes to folders or emits
	the "file-activated" signal depending on what type of row was
	activated.
	(create_folder_tree): Renamed from create_directory_tree(), since
	"folder" is the new politically-correct name.

	* gtkfilechooserprivate.h (struct _GtkFileChooserIface): Added a
	file-activated signal.

	* gtkfilechooser.c (gtk_file_chooser_class_init): Register the
	signal.

	* gtkfilechooserutils.c (_gtk_file_chooser_set_delegate): Connect
	to "file-activated" on the delegate.
	(delegate_file_activated): New function.

	* TODO: Added an API item about Clipart-like folders provided by
	applications.

2003-09-09  Federico Mena Quintero  <federico@ximian.com>

	* gtkfilechooserimpldefault.c (set_cell_text_bold_if_folder): Use
	the cell renderer's "text" and "weight" properties rather than
	"markup".

2003-09-09  Federico Mena Quintero  <federico@ximian.com>

	* gtkfilechooserimpldefault.c (tree_selection_changed): Make the
	list model read in directory information as well.
	(set_cell_text_bold_if_folder): New utility function.  Sets a
	cell's text, making it bold if the file info is a folder.
	(list_name_data_func): Use set_cell_text_bold_if_folder().
	(list_mtime_data_func): Use set_cell_text_bold_if_folder().
	(list_size_data_func): Don't set anything if the file info is a
	folder.

2003-09-08  Federico Mena Quintero  <federico@ximian.com>

	* gtkfilesystem.c (gtk_file_info_free): Free the display_key.

	* gtkfilechooserimpldefault.c (list_mtime_data_func): New
	function.
	(create_file_list): Add a modification time column; remove the
	size column.
	(mtime_sort_func): New callback.
	(tree_selection_changed): Add a sorting function for the mtime
	column.  Have the model fetch the modification time as well.
	(tree_selection_changed): Do allow the file list model to show
	directories.

	* testfilechooser.c (my_new_from_file_at_size): Do not try to read
	non-regular files.

2003-09-05  Federico Mena Quintero  <federico@ximian.com>

	* gtkfilechooserimpldefault.c (create_filter): New function.
	(create_directory_tree): New function.
	(create_file_list): New function.
	(create_filename_entry): New function.
	(gtk_file_chooser_impl_default_constructor): Use the functions
	above rather than creating the whole file chooser megawidget here,
	for readability.  This will also let us rearrange the user
	interface more easily.

Wed Sep  3 16:38:59 2003  Owen Taylor  <otaylor@redhat.com>

	* glib-interface-propreties-0.5.patch: Remove excess
	check that was breaking with current GObject.

	* gtkfilechooser.c (gtk_file_chooser_class_init):
	use the new ability to have a class_init function for
	interfaces to avoid the ugly static gboolean initialized
	hack.

Wed Sep  3 15:32:26 2003  Owen Taylor  <otaylor@redhat.com>

	* glib-interface-propreties-{0.4,0.5}.patch: Update.

	* gtkfilechooserutils.c prop-editor.c: Update for
	newer interface-properties API.

2003-09-03  Federico Mena Quintero  <federico@ximian.com>

	* TODO: Removed the "extra widget" bit, implemented with the
	following:

	* gtkfilechooser.h: Added gtk_file_chooser_{set,get}_extra_widget().

	* gtkfilechooser.c (gtk_file_chooser_base_init): Install an
	"extra-widget" interface property.
	(gtk_file_chooser_set_extra_widget): Implemented.
	(gtk_file_chooser_get_extra_widget): Implemented.

	* gtkfilechooserutils.h (GtkFileChooserProp): Added
	GTK_FILE_CHOOSER_PROP_EXTRA_WIDGET.

	* gtkfilechooserutils.c (_gtk_file_chooser_install_properties):
	Added the "extra-widget" property.

	* gtkfilechooserimpldefault.c (struct _GtkFileChooserImplDefault):
	Added an extra_widget field.
	(gtk_file_chooser_impl_default_set_property): Handle the
	"extra-widget" property.
	(gtk_file_chooser_impl_default_get_property): Likewise.
	(set_preview_widget): Fix the call gtk_container_remove().  Also,
	we don't need to ref/sink/unref the preview widget, as that gets
	already done by container_add/remove.
	(set_extra_widget): New utility function.

	* testfilechooser.c (main): Add an extra widget.

2003-09-02  Federico Mena Quintero  <federico@ximian.com>

	* gtkfilesystem.h: s/nonexistant/nonexistent
	* gtkfilesystem.c: Likewise.
	* gtkfilesystemgnomevfs.c: Likewise.
	* gtkfilesystemunix.c: Likewise.

2003-08-27  Federico Mena Quintero  <federico@ximian.com>

	* README: The required GtkTreeView patches are already on CVS.
	Removed the part that mentions them.

Fri Aug 22 15:57:27 2003  Owen Taylor  <otaylor@redhat.com>

	* glib-interface-properties-0.3.patch
	glib-interface-properties-0.4.patch: New version of object
	properties patch, commenting out a part that wasn't
	working properly.

Wed Jul 23 18:43:20 2003  Owen Taylor  <otaylor@redhat.com>

	* gtkfilesystemmodel.c (_gtk_file_system_model_get_path):
	Return parent path for dummy paths.

Wed Jul 23 17:52:01 2003  Owen Taylor  <otaylor@redhat.com>

	* testfilechooser.c: Add over-big test case for preview
	(much of size from a modified copy of
	gdk_pixbuf_new_from_file_at_size())

	* gtkfilechooserutils.[ch] gtkfilechooser.c
	gtkfilechooserprivate.h gtkfilechooserimpldefault.c:
	Add get_preview_path() as a virtual function; implement
	update-preview signal that was in the header file.

	* gtkfilechooserimpldefault.c: Finish a simple preview
	widget implementation.

Wed Jul 23 11:23:43 2003  Owen Taylor  <otaylor@redhat.com>

	* gtkfilefilter.[ch]: File filter objects.

	* gtkfilechooser.[ch] gtkfilechooserutils.[ch]: Add
	file filtering to API.

	* gtkfilechooserimpldefault.c: Implement file filters.

	* testfilechooser.c: Try out the filter functionality.

	* gtkfilesystemmodel.c: Add
	_gtk_file_system_model_set_filter() to set a callback
	function for filtering.

	* gtkfilechooserutils.c: Propagate property notification
	to the receiver.

	* fnmatch.c: Copy this from GTK+ temporarily to get
	UTF-8 pattern matching functionality.

Wed Jul 16 16:50:31 2003  Owen Taylor  <otaylor@redhat.com>

	* configure.ac Makefile.am: auto-ize.

	* xdgmime/: Add freedesktop.org MIME spec implementatin
	by Jonathan Blandford.

	* gtkfilesystem.[ch]: Add gtk_file_info_render_icon()
	gtk_file_info_set/get_icon_type to do icon handling
	based on MIME type. Add a simple icon caching system.

	* gtkfilesystemgnomevfs.c: Implement ensure_types()
	so that extending the set of types for a loaded
	directory works. Set the MIME type to get the default
	icon handling.

	* gtkfilesystemunix.c: Look up the MIME type using
	xdgmime.

	* gtkfilechooserimpldefault.c: Display icons in the list.

	* glib-interface-properties-0.3.patch: New revision
	of interface properties patch.

Fri Jul 11 14:37:07 2003  Owen Taylor  <otaylor@redhat.com>

	* gtkfilechooser.[ch] gtkfilechooserprivate.h
	gtkfilechooserimpldefault.c: Add
	gtk_file_chooser_set_current_name() to set the current
	entry contents.

	* *.c: Consistently use '-' not '_' in property names and
	signal names.

	* gtkfilechooser.c: Document all exported functions.

Wed Apr  9 12:28:04 2003  Owen Taylor  <otaylor@redhat.com>

	* gtkfilesystemmodel.c:
	- Disconnect signal connections when appropriate.
	- Listen to ::roots-changed on the file system
	- When the last reference count on a child is
	  removed, queue an idle to unload the parent.

	* gtkfilesystemgnomevfs.c
	- When URI's outside of file:/// are acessed,
	  add toplevel URI's to the list of roots.
	- Improve display name computations

	* gtkfilechooserentry.c: Don't complete on empty
	file parts; free stored folder when base directory
	changes.

	* gtkfilechooser.c: Fill in some docs.

Fri Apr  4 18:29:27 2003  Owen Taylor  <otaylor@redhat.com>

	* gtkfilechooserentry.c: Fix double free.

Fri Apr  4 17:30:27 2003  Owen Taylor  <otaylor@redhat.com>

	* gtkfilechooserprivate.h gtkfilechooser.h: Move
	interface definition into a private header so it
	can refer to GtkFileSystem.

	* *.[ch]: Switch over from using gchar *uri internally
	to using GtkFilePath * internally, and add
	conversion routines to GtkFileSystem.

	* TODO README: Updates.

Thu Mar 27 16:47:18 2003  Owen Taylor  <otaylor@redhat.com>

	* Move to the GNOME CVS repository, start ChangeLog'ing
	all changes.

Fri Mar 21 15:32:56 2003  Owen Taylor  <otaylor@redhat.com>

	* Initial import into local CVS.

