## Process this file with automake to produce Makefile.in

SUBDIRS = pixmaps

LIB_VERSION=0:0:0
LIB_VERSION_NUM=0.0.0

#
# The targets
#
bin_PROGRAMS    = gnome_segv gnome-remote-bootstrap
lib_LTLIBRARIES = libgnomeui-2.la

#
# Install location for header files
#
libincludedir = $(includedir)/gnome/2

libgnomeuiincludedir = $(includedir)/gnome/2/libgnomeui

INCLUDES = \
	-I$(top_builddir)				\
	-I$(top_srcdir)					\
	-I$(top_srcdir)/intl				\
	-I$(top_builddir)/intl				\
        -DGNOMEUILIBDIR=\""$(libdir)"\" 		\
        -DGNOMEUIDATADIR=\""$(datadir)"\" 		\
        -DGNOMEUIPIXMAPDIR=\""$(datadir)/pixmaps"\"	\
        -DGNOMEUIBINDIR=\""$(bindir)"\" 		\
        -DGNOMEUILOCALSTATEDIR=\""$(localstatedir)"\" 	\
        -DGNOMEUILOCALEDIR=\""$(gnomelocaledir)"\" 	\
	-DG_LOG_DOMAIN=\"GnomeUI\"			\
	$(WARN_CFLAGS)					\
	$(LIBGNOMEUI_CFLAGS)				\
	-DGTK_VERSION=\""$(GTK_VERSION)"\"		\
	-DVERSION=\"$(VERSION)\"

EXTRA_HEADERS = 

noinst_HEADERS = \
	libgnomeuiP.h

EXTRA_PROGRAMS = unused

unused_SOURCES = \
	gnome-mdi.c			\
	gnome-mdiP.h			\
	gnome-mdi-child.c		\
	gnome-mdi-generic-child.c       \
	gnome-mdi-session.c		\
	gnome-pouch.c			\
	gnome-pouchP.h			\
	gnome-roo.c			\
	gnome-mdi.h			\
	gnome-mdi-child.h		\
	gnome-mdi-generic-child.h	\
	gnome-mdi-session.h		\
	gnome-pouch.h			\
	gnome-roo.h			\
	gnome-ditem-edit.c

libgnomeui_2_la_SOURCES = \
	gnometypebuiltins.h		\
	gnometypebuiltins.c		\
	gnome-stock-icons.c		\
	gnome-about.c			\
	gnome-canvas-init.c		\
	gnome-client.c			\
	gnome-color-picker.c		\
	gnome-dateedit.c		\
	gnome-druid.c			\
	gnome-druid-page.c		\
	gnome-druid-page-edge.c		\
	gnome-druid-page-standard.c	\
	gnome-geometry.c		\
	gnome-component-widget.c	\
	gnome-entry.c			\
	gnome-image-entry.c		\
	gnome-image-selector.c		\
        gnome-font-picker.c		\
	gnome-href.c			\
	gnome-ice.c			\
	gnome-init.c			\
	gnome-less.c			\
	gnome-pixmap.c			\
        gnome-winhints.c		\
	gnometypes.c			\
	gtk-clock.c			\
	gtkdial.c			\
	gnome-icon-list.c		\
	gnome-icon-item.c		\
	gnome-icon-text.c		\
	gnome-vfs-util.c		\
	gnome-window.c			\
	$(noinst_HEADERS)

## this lists all the non-generated headers
gnome_headers = \
	gnome-about.h			\
	gnome-canvas-init.h		\
	gnome-client.h			\
	gnome-color-picker.h		\
	gnome-dateedit.h		\
	gnome-ditem-edit.h		\
	gnome-druid.h			\
	gnome-druid-page.h		\
	gnome-druid-page-edge.h		\
	gnome-druid-page-standard.h	\
	gnome-component-widget.h	\
	gnome-entry.h			\
	gnome-image-entry.h		\
	gnome-image-selector.h		\
        gnome-font-picker.h		\
	gnome-geometry.h		\
	gnome-href.h			\
	gnome-ice.h			\
	gnome-icon-item.h		\
	gnome-icon-list.h		\
	gnome-icon-text.h		\
	gnome-init.h			\
	gnome-less.h			\
	gnome-macros.h			\
	gnome-pixmap.h			\
	gnome-stock-icons.h		\
	gnome-types.h			\
	gnome-uidefs.h			\
        gnome-winhints.h		\
	gtkdial.h			\
	gtk-clock.h			\
	gnome-vfs-util.h		\
	gnome-window.h			\
	oafgnome.h

libinclude_HEADERS = \
	libgnomeui.h

libgnomeuiinclude_HEADERS =		\
	$(gnome_headers)		\
	gnometypebuiltins.h

gnome_remote_bootstrap_SOURCES=gnome-remote-bootstrap.c

# all autogenerated files need to be generated in the srcdir,
# so old versions get remade and are not confused with newer
# versions in the build dir. thus a development setup requires
# srcdir to be writable, passing --disable-rebuilds to
# ../configure will supress all autogeneration rules.
$(srcdir)/stamp-libgnomeui.defs: @REBUILD@ Makefile.am libgnomeui.defs libgnomeui-boxed.defs $(gnome_headers)
	cd $(srcdir) \
	&& glib-mkenums \
			--comments ";; @comment@" \
			--fprod "; enumerations from \"@filename@\"\n " \
			--vhead "(define-@type@ @EnumName@" \
			--vprod "   (@valuenick@ @VALUENAME@)" \
			--vtail ")" \
		$(gnome_headers) > xgen-gdef \
	&& cat libgnomeui-boxed.defs >> xgen-gdef \
	&& (cmp -s xgen-gdef libgnomeui.defs || cp xgen-gdef libgnomeui.defs) \
	&& rm -f xgen-gdef \
	&& echo timestamp > $(@F)

$(srcdir)/gnometypebuiltins.c: @REBUILD@ Makefile.am $(gnome_headers) gnometypebuiltins.h
	cd $(srcdir) \
	&& glib-mkenums \
			--fhead "#include <gobject/genums.h>\n" \
			--fhead "#include \"libgnomeui.h\"\n\n" \
			--fhead "#include \"gnometypebuiltins.h\"\n\n" \
			--fprod "\n/* enumerations from \"@filename@\" */" \
			--vhead "static const G@Type@Value _@enum_name@_values[] = {" \
			--vprod "  { @VALUENAME@, \"@VALUENAME@\", \"@valuenick@\" }," \
			--vtail "  { 0, NULL, NULL }\n};\n\n" \
			--vtail "GType\n@enum_name@_get_type (void)\n{\n" \
			--vtail "  static GType type = 0;\n\n" \
			--vtail "  if (!type)\n" \
			--vtail "    type = g_@type@_register_static (\"@EnumName@\", _@enum_name@_values);\n\n" \
			--vtail "  return type;\n}\n\n" \
		$(gnome_headers) > xgen-gtbec \
	&& cp xgen-gtbec $(@F) \
	&& rm -f xgen-gtbec

$(srcdir)/gnometypebuiltins.h: @REBUILD@ Makefile.am $(gnome_headers)
	cd $(srcdir) \
	&& glib-mkenums \
			--fhead "#ifndef __GNOMETYPEBUILTINS_H__\n" \
			--fhead "#define __GNOMETYPEBUILTINS_H__ 1\n\n" \
			--fhead "#include <gobject/genums.h>\n\n" \
			--fhead "G_BEGIN_DECLS\n\n" \
			--ftail "G_END_DECLS\n\n" \
			--ftail "#endif /* __GNOMETYPEBUILTINS_H__ */\n" \
			--fprod "\n/* --- @filename@ --- */" \
			--eprod "#define GNOME_TYPE_@ENUMSHORT@ @enum_name@_get_type()\n" \
			--eprod "GType @enum_name@_get_type (void);\n" \
		$(gnome_headers) > xgen-gth \
	&& cp xgen-gth $(@F) \
	&& rm -f xgen-gth

$(srcdir)/gnometype_inits.c: @REBUILD@ Makefile.am $(gnome_headers)
	cd $(srcdir) \
	&& glib-mkenums \
			--fprod "\n/* enumerations from \"@filename@\" */" \
			--vtail "    (void) @enum_name@_get_type ();\n" \
		$(gnome_headers) > xgen-gtic \
	&& cp xgen-gtic $(@F) \
	&& rm -f xgen-gtic

#######################

gnome_segv_SOURCES = gnome_segv.c

gtkrcdir = $(datadir)
gtkrc_DATA = gtkrc gtkrc.el gtkrc.eo gtkrc.he gtkrc.hy gtkrc.ja \
	gtkrc.ko gtkrc.ru gtkrc.tr gtkrc.th gtkrc.uk \
	gtkrc.iso88592 gtkrc.iso88595 gtkrc.zh_CN gtkrc.zh_TW.Big5 \
	gtkrc.ka_GE.georgianacademy gtkrc.ka_GE.georgianps \
	gtkrc.vi_VN.tcvn gtkrc.vi_VN.viscii

EXTRA_DIST =					\
	$(gtkrc_DATA)				\
	AUTHORS					\
	gnome.defs 				\
	gnome-boxed.defs			\
	portrait.xpm				\
	landscape.xpm				\
	libgnomeui-2.0.pc.in

libgnomeui_2_la_LDFLAGS = \
	-version-info $(LIB_VERSION)

libgnomeui_2_la_LIBADD = \
	$(LIBGNOMEUI_LIBS)

LDADD = \
	libgnomeui-2.la

pkgconfigdir = $(libdir)/pkgconfig
pkgconfig_DATA = libgnomeui-2.0.pc
